version: '3'
networks:
  traefik-net:
    external: true

services:  
  web:
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`ev-chain.epu.ntua.gr`) && PathPrefix(`/app2/api/`)"
      - "traefik.http.routers.web.entrypoints=https"  # Use the HTTPS entrypoint
      - "traefik.docker.network=traefik-net"
      - "traefik.http.routers.web.tls=true"  # Enable TLS for this route
    build: ../backend  
    ports:
      - "8001:8001"
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ../backend:/usr/src/backend
    env_file:
      - ./.env.prod
    depends_on:
    - db
    networks:
      - traefik-net

  db: 
    image: postgres:15
    volumes:
      - .data/postgres_data:/var/lib/postgresql/data/
    command: -p 5433
    ports:
      - '5433:5433'
    # expose:
      # - '5433'
    environment:
      - POSTGRES_USER=evchainuser
      - POSTGRES_PASSWORD=evchain
      - POSTGRES_DB=ChargingStations  
    networks:
      - traefik-net  

  frontend:
    build: 
      context: ../charging-stations
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../charging-stations:/frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ev-chain.epu.ntua.gr`) && PathPrefix(`/app2/`)"
      # - "traefik.http.routers.web.rule=Host(`energate.epu.ntua.gr`) && PathPrefix(`/dss`)"
      - "traefik.http.routers.frontend.entrypoints=https"  # Use the HTTPS entrypoint
      - "traefik.docker.network=traefik-net"
      - "traefik.http.routers.frontend.tls=true"  # Enable TLS for this route    
    networks:
      - traefik-net  
      
volumes:
  postgres_data:
